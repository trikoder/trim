import { _ as _export_sfc, o as openBlock, c as createElementBlock, Q as createStaticVNode } from "./chunks/framework.50d1116b.js";
const __pageData = JSON.parse('{"title":"Adding resource","description":"","frontmatter":{},"headers":[],"relativePath":"adding-resource.md","filePath":"adding-resource.md"}');
const _sfc_main = { name: "adding-resource.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="adding-resource" tabindex="-1">Adding resource <a class="header-anchor" href="#adding-resource" aria-label="Permalink to &quot;Adding resource&quot;">​</a></h1><p>We will examine typical scenario where new resource is ready on backend api and admin user interface has to be created. Steps needed to complete UI for this new resource:</p><ul><li>examine resource api</li><li>create resource controller</li><li>add resource route</li><li>add navigation link</li><li>register controller as service</li></ul><p>For simple resources this can be completed in less then 5 minutes.</p><h2 id="examine-resource-api" tabindex="-1">Examine resource api <a class="header-anchor" href="#examine-resource-api" aria-label="Permalink to &quot;Examine resource api&quot;">​</a></h2><p>Make sure that resource backend api is ready to handle get, post, and put requests. Check that backend properly outputs relation includes, make sure that filtering and validation rules are respected. Examine new resource attributes and relations and decide what list and form elements have to be used.</p><p>Everything works? Then lets build resource UI controller.</p><h2 id="create-resource-controller" tabindex="-1">Create resource controller <a class="header-anchor" href="#create-resource-controller" aria-label="Permalink to &quot;Create resource controller&quot;">​</a></h2><p>Lets say new resource in need of UI is &quot;tag&quot; entity. We will need a component to describe how resource is browsed, filtered and sorted in list, what form fields are rendered when resource is created or updated.</p><p>For this purpose we will build a tag resource controller in &#39;src/controllers/tag.js&#39; file:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    resourceName: </span><span style="color:#9ECBFF;">&#39;tag&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">setupList</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">({</span><span style="color:#FFAB70;">list</span><span style="color:#E1E4E8;">}) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">addCreateControl</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Create new tag&#39;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// --------------------------------------------------------------</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Filters</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// --------------------------------------------------------------</span></span>\n<span class="line"><span style="color:#E1E4E8;">        list.</span><span style="color:#B392F0;">addFilter</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;TextFormElement&#39;</span><span style="color:#E1E4E8;">, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            name: </span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            label: </span><span style="color:#9ECBFF;">&#39;Title&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// --------------------------------------------------------------</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// List items</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// --------------------------------------------------------------</span></span>\n<span class="line"><span style="color:#E1E4E8;">        list.</span><span style="color:#B392F0;">addItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;TextListItem&#39;</span><span style="color:#E1E4E8;">, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            attributes: {class: </span><span style="color:#9ECBFF;">&#39;textListItemType1 hiddenOnMobile&#39;</span><span style="color:#E1E4E8;">},</span></span>\n<span class="line"><span style="color:#E1E4E8;">            caption: </span><span style="color:#9ECBFF;">&#39;ID&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            mapTo: </span><span style="color:#9ECBFF;">&#39;id&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        list.</span><span style="color:#B392F0;">addItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;LinkListItem&#39;</span><span style="color:#E1E4E8;">, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            caption: </span><span style="color:#9ECBFF;">&#39;Title&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            mapTo: </span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            action: </span><span style="color:#9ECBFF;">&#39;editItem&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// --------------------------------------------------------------</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Context menu</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// --------------------------------------------------------------</span></span>\n<span class="line"><span style="color:#E1E4E8;">        list.</span><span style="color:#B392F0;">addItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ContextMenuListItem&#39;</span><span style="color:#E1E4E8;">, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            caption: </span><span style="color:#9ECBFF;">&#39;Actions&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            items: [{caption: </span><span style="color:#9ECBFF;">&#39;Edit&#39;</span><span style="color:#E1E4E8;">, action: </span><span style="color:#9ECBFF;">&#39;editItem&#39;</span><span style="color:#E1E4E8;">}]</span></span>\n<span class="line"><span style="color:#E1E4E8;">        });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    },</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">setupEdit</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">({</span><span style="color:#FFAB70;">edit</span><span style="color:#E1E4E8;">}) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">addToIndexControl</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">addSaveControl</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        edit.</span><span style="color:#B392F0;">addField</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;TextFormElement&#39;</span><span style="color:#E1E4E8;">, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            label: </span><span style="color:#9ECBFF;">&#39;Title&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            name: </span><span style="color:#9ECBFF;">&#39;title&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre></div><hr><p>Read up on how <a href="/trim/core-concepts-and-api.html#resource-controller">resource controllers</a> work, examine how to build <a href="/trim/list-elements.html">resource list</a> and <a href="/trim/form-elements.html">form elements</a>.</p><h2 id="add-resource-route" tabindex="-1">Add resource route <a class="header-anchor" href="#add-resource-route" aria-label="Permalink to &quot;Add resource route&quot;">​</a></h2><p>Open your routes file (src/routes.js) and add new resource route:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">...</span></span>\n<span class="line"><span style="color:#E1E4E8;">router.</span><span style="color:#B392F0;">resource</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;tag&#39;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#F97583;">...</span></span></code></pre></div><p>Browse <a href="/trim/core-concepts-and-api.html#router">router docs</a> to learn more.</p><h2 id="add-navigation-item" tabindex="-1">Add navigation item <a class="header-anchor" href="#add-navigation-item" aria-label="Permalink to &quot;Add navigation item&quot;">​</a></h2><p>Open your main navigation component (src/mainNavigation.js) and add new navigation item:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">getNavigationItems</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">router</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        caption: </span><span style="color:#9ECBFF;">&#39;Tags&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        key: </span><span style="color:#9ECBFF;">&#39;tag&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        url: router.</span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;resource.tag.index&#39;</span><span style="color:#E1E4E8;">),</span></span>\n<span class="line"><span style="color:#E1E4E8;">        icon: </span><span style="color:#9ECBFF;">&#39;Misc&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">],</span></span></code></pre></div><p>Read more about <a href="/trim/core-concepts-and-api.html#navigation">main navigation</a> if you want to learn more.</p><h2 id="register-controller-as-service" tabindex="-1">Register controller as service <a class="header-anchor" href="#register-controller-as-service" aria-label="Permalink to &quot;Register controller as service&quot;">​</a></h2><p>Open up your services file (src/services.js) and add new tag resource controller to registry. Use dynamic import to load controller code and its dependencies only when controller is actually rendered.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">...</span></span>\n<span class="line"><span style="color:#B392F0;">TagController</span><span style="color:#E1E4E8;">: () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./controllers/tag.js&#39;</span><span style="color:#E1E4E8;">),</span></span>\n<span class="line"><span style="color:#F97583;">...</span></span></code></pre></div><p>Done! Read up on <a href="/trim/core-concepts-and-api.html#services">services</a> if you want to learn more.</p>', 25);
const _hoisted_26 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_26);
}
const addingResource = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  addingResource as default
};
