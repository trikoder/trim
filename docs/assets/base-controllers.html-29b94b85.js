import{_ as p,r as o,o as i,c as r,a as s,b as n,d as e,e as t}from"./app-b484721a.js";const l={},c=s("h1",{id:"base-controllers",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#base-controllers","aria-hidden":"true"},"#"),n(" Base controllers")],-1),u=s("p",null,"Trim includes a number of predefined UI base controllers for common use cases. Beside resource controller that is most frequently extended base controllers for resource edit, nested resource and media resource are available.",-1),d=s("h2",{id:"resource-controller",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#resource-controller","aria-hidden":"true"},"#"),n(" Resource controller")],-1),k={href:"https://trikoder.github.io/trim/demo/index.html#page",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/trikoder/trim/tree/master/demo/controllers/page.js",target:"_blank",rel:"noopener noreferrer"},m=t(`<p>Code example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>

    <span class="token literal-property property">resourceName</span><span class="token operator">:</span> <span class="token string">&#39;tag&#39;</span><span class="token punctuation">,</span>

    <span class="token function">setupList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>list<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// how is resource listed?</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">setupEdit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>edit<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// how is resource edited?</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sometimes empty resource is required for meaningful create admin interface. In this case draft resource is created on api (with id but no attributes and relation data) and edited in UI immediately.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>

    <span class="token literal-property property">resourceName</span><span class="token operator">:</span> <span class="token string">&#39;tag&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">createRequiresDraft</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Explicit included relations and data can be specifed on resource controller index and edit actions:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>

    <span class="token literal-property property">resourceName</span><span class="token operator">:</span> <span class="token string">&#39;tag&#39;</span><span class="token punctuation">,</span>

    <span class="token literal-property property">includedRelationships</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;media&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;author&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">edit</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;media&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;author&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;author.media&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token operator">...</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Default behaviour for resource saving is for related resources to be saved before main resource. Alternate save strategy for main and related resources when resource is created is available by settting &#39;createRelatedStrategy&#39; property on controller to &#39;relatedLast&#39; value.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>

    <span class="token literal-property property">resourceName</span><span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">createRelatedStrategy</span><span class="token operator">:</span> <span class="token string">&#39;relatedLast&#39;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="resource-edit-controller" tabindex="-1"><a class="header-anchor" href="#resource-edit-controller" aria-hidden="true">#</a> Resource edit controller</h2>`,9),b={href:"https://trikoder.github.io/trim/demo/index.html#my-settings",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/trikoder/trim/tree/master/demo/controllers/mySettings.js",target:"_blank",rel:"noopener noreferrer"},g=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>

    <span class="token literal-property property">extendsController</span><span class="token operator">:</span> <span class="token string">&#39;BaseResourceEdit&#39;</span><span class="token punctuation">,</span>

    <span class="token function-variable function">getModel</span><span class="token operator">:</span> <span class="token parameter">Model</span> <span class="token operator">=&gt;</span> Model<span class="token punctuation">.</span><span class="token function">getFromApi</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token function">setupEdit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>edit<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setPageTitle</span><span class="token punctuation">(</span><span class="token string">&#39;My settings&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addSaveControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        edit<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&#39;TextFormElement&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Email&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;email&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nested-resource-controller" tabindex="-1"><a class="header-anchor" href="#nested-resource-controller" aria-hidden="true">#</a> Nested resource controller</h2>`,2),h={href:"https://trikoder.github.io/trim/demo/index.html#category",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/trikoder/trim/tree/master/demo/controllers/category.js",target:"_blank",rel:"noopener noreferrer"},x=t(`<p>Lets examine category api response:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;category&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">attributes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Category 1&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;Aenean gravida, orci in sagittis tincidunt, dolor quam pellentesque dolor, nec viverra neque nunc id mi.&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">published</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">imageThumbnailUrl</span><span class="token operator">:</span> <span class="token string">&#39;http://pipsum.com/400x300.jpg?v=1&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">imageOriginalUrl</span><span class="token operator">:</span> <span class="token string">&#39;http://pipsum.com/1200x900.jpg?v=1&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">relationships</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">parentCategory</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;category&#39;</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">childCategories</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;category&#39;</span><span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Resource hierarchy is defined via parentCategory and childCategories relations.</p><p>Our category resource controller should extend base nested resource controller. Via resourceConfig property we define parent and children relation mappings.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>

    <span class="token literal-property property">resourceName</span><span class="token operator">:</span> <span class="token string">&#39;category&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">extendsController</span><span class="token operator">:</span> <span class="token string">&#39;BaseNestedResource&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">mapParentTo</span><span class="token operator">:</span> <span class="token string">&#39;parentCategory&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">mapChildrenTo</span><span class="token operator">:</span> <span class="token string">&#39;childCategories&#39;</span><span class="token punctuation">,</span>

    <span class="token function">setupList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>list<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// how is resource listed?</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">setupEdit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>edit<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// how is resource edited?</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Resource config has following defaults:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">mapParentTo</span><span class="token operator">:</span> <span class="token string">&#39;parent&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">mapChildrenTo</span><span class="token operator">:</span> <span class="token string">&#39;children&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">mapLevelTo</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token literal-property property">mapIsLeafTo</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Properties mapChildrenTo, mapLevelTo, mapIsLeafTo can be defined as strings or functions if needed.</p><h2 id="media-resource-controller" tabindex="-1"><a class="header-anchor" href="#media-resource-controller" aria-hidden="true">#</a> Media resource controller</h2>`,9),_={href:"https://trikoder.github.io/trim/demo/index.html#media",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/trikoder/trim/tree/master/demo/controllers/media.js",target:"_blank",rel:"noopener noreferrer"},j=t(`<p>Lets examine typical media api response:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;media&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">attributes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Media item 1&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">caption</span><span class="token operator">:</span> <span class="token string">&#39;Aenean gravida, orci in sagittis tincidunt, dolor quam pellentesque dolor, nec viverra neque nunc id mi.&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">mediaType</span><span class="token operator">:</span> <span class="token string">&#39;image&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">thumbnailUrl</span><span class="token operator">:</span> &#39;http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>pipsum<span class="token punctuation">.</span>com<span class="token operator">/</span>400x300<span class="token punctuation">.</span>jpg<span class="token punctuation">,</span>
        <span class="token literal-property property">originalUrl</span><span class="token operator">:</span> &#39;http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>pipsum<span class="token punctuation">.</span>com<span class="token operator">/</span>1200x900<span class="token punctuation">.</span>jpg
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Example media controller is shown bellow. Via resource config propery we define list of media types (image, file, videoEmbed) our controller is handling. For each media type a method for edit handling is defined (setup[MediaType]Edit).</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>

    <span class="token literal-property property">extendsController</span><span class="token operator">:</span> <span class="token string">&#39;BaseMediaResource&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">resourceName</span><span class="token operator">:</span> <span class="token string">&#39;media&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">resourceCaption</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">mediaTypes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;videoEmbed&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">createPageTitle</span><span class="token operator">:</span> <span class="token string">&#39;Create video embed&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">hasUploadUi</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

    <span class="token function">setupList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>list<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCreateImageControl</span><span class="token punctuation">(</span><span class="token string">&#39;Create new image&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addDropdownControl</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span>
            <span class="token literal-property property">caption</span><span class="token operator">:</span> <span class="token string">&#39;Create video embed&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>openCreateVideoEmbed
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">caption</span><span class="token operator">:</span> <span class="token string">&#39;Upload file&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>openCreateFile
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token operator">...</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">setupImageEdit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>edit<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addToIndexControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addSaveControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        edit<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&#39;MediaPreviewFormElement&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Photography&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;mediaPreview&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token operator">...</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">setupVideoEmbedEdit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>edit<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token operator">...</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">setupFileEdit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>edit<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token operator">...</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For our media controller to work properly we have to define following route:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;media&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">hasCreateRoute</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;videoEmbed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6);function C(E,T){const a=o("ExternalLinkIcon");return i(),r("div",null,[c,u,d,s("p",null,[n("Used when you need to define how resource is browsed, filtered and sorted in list, what form fields are rendered when resource is created or updated. Example "),s("a",k,[n("demo controller"),e(a)]),n(" and "),s("a",v,[n("codebase"),e(a)]),n(".")]),m,s("p",null,[n('Used when you want to edit one specific resource and listing is not available. Implement "getModel" method and provide model instance to edit. Example '),s("a",b,[n("demo controller"),e(a)]),n(" and "),s("a",y,[n("codebase"),e(a)]),n(". Code example:")]),g,s("p",null,[n("Used for hierarchal resources that can be presented in nested tree view form. Categories as resources usually have parent and child categories. Example "),s("a",h,[n("demo controller"),e(a)]),n(" and "),s("a",f,[n("codebase"),e(a)]),n(".")]),x,s("p",null,[n("Used for browse, create (upload) and edit media resources sush as images or files. Example "),s("a",_,[n("demo controller"),e(a)]),n(" and "),s("a",w,[n("codebase"),e(a)]),n(".")]),j])}const U=p(l,[["render",C],["__file","base-controllers.html.vue"]]);export{U as default};
