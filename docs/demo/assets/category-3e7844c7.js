import{q as P}from"./index-405e8ead.js";const F={resourceName:"category",extendsController:"BaseNestedResource",mapParentTo:"parentCategory",mapChildrenTo:"childCategories",mapPositionTo:"position",setupList:function({list:e}){this.addControl({caption:"Create new category",className:"accented iconEdit",action:()=>this.openCreate({position:e.rootResourceModels.length+1})}),e.addFilter("TextFormElement",{name:"title",label:"Title"}),e.addFilter("NestedSelectFormElement",{name:"parentCategory",label:"Parent category",mapCaptionTo:"title",mapParentTo:"parentCategory",mapChildrenTo:"childCategories",mapPositionTo:"position",selectableLevel:"all",relation:{resourceName:"category"}}),e.addMassAction([{caption:"Publish",updateAttributes:{published:!0}},{caption:"Unpublish",updateAttributes:{published:!1}}]),e.addItem("LinkListItem",{caption:"Title",mapTo:"title",action:"editItem"}),e.addItem("TextListItem",{caption:"Description",mapTo:"description"}),e.addItem("BlipListItem",{caption:"Published",mapTo:"published",addIf:this.screenIsLarge}),e.addItem("ContextMenuListItem",{caption:"Actions",items:i=>this.setupListContextMenu(e,i)})},setupEdit:function({edit:e,method:i,query:n}){this.addToIndexControl().addSaveControl(),e.addField("TextFormElement",{label:"Title",name:"title",attributes:{input:{class:"inputType2 size2"}},layoutReference:"mainRegion"}),e.addField("TextareaFormElement",{label:"Description",name:"description",layoutReference:"mainRegion"}),e.addField("FileAttachmentFormElement",{label:"Image",name:"image",mapThumbnailTo:"imageThumbnailUrl",mapCurrentFileUrlTo:"imageOriginalUrl",layoutReference:"mainRegion"}),e.addField("NestedSelectFormElement",{readOnly:i==="edit",modelValue:"4",name:"parentCategory",label:"Parent category",mapCaptionTo:"title",mapParentTo:"parentCategory",mapChildrenTo:"childCategories",mapPositionTo:"position",selectableLevel:"all",relation:{type:"hasOne",resourceName:"category"},hint:i==="edit"?"Existing category parent cannot be updated":"",layoutReference:"sideRegion"}),e.addField("SelectFormElement",{label:"Published status",name:"published",selectOptions:[{caption:"Published",value:!0},{caption:"Not published",value:!1}],layoutReference:"sideRegion"}),e.addField("HiddenFormElement",{name:"position",addIf:i==="create",value:n.position?parseInt(n.position,10):1})},setupListContextMenu(e,i){const n=i.get("id"),c=i.get("parentCategory"),s=i.get("childCategories"),b=(t,o)=>{const a=t.getAttribute("position"),d=o.getAttribute("position");return a-d},r=c?c.get("childCategories").models.sort(b):e.rootResourceModels,m=r.map((t,o)=>({id:t.get("id"),position:o+1})),u=m.find(t=>t.id===n).position,g=m.map(t=>t.position),C=Math.min.apply(Math,g),y=Math.max.apply(Math,g),l=(t,o)=>P.Model.extend({type:"category"}).create().setId(t.get("id")).saveAttribute("position",o).then(()=>{t.setAttribute("position",o)}),h=t=>Promise.all(r.map((o,a)=>o.get("position")!==a+1?l(o,a+1):null)).then(()=>{const o=i.get("position"),a=o+t,d=r.find(T=>T.get("position")===a);return Promise.all([l(i,a),l(d,o)])}),p=[{caption:"Edit category",url:t=>this.getEditUrl({id:n}),action:t=>this.openEdit({id:n})},{caption:"Add subcategory",url:t=>this.getCreateUrl({parentCategoryId:n,position:s?s.length+1:1}),action:t=>this.openCreate({parentCategoryId:n,position:s?s.length+1:1})}];return u>C&&p.push({caption:"Move up",action:(t,o)=>(o.close(),h(-1))}),u<y&&p.push({caption:"Move down",action:(t,o)=>(o.close(),h(1))}),p}};export{F as default};
