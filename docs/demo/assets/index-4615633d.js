class t{constructor(o=null,e={}){if(this.apiKey=o,this.options=e,typeof window>"u")throw new Error("google-maps is supported only in browser environment")}load(){return typeof this.api<"u"?Promise.resolve(this.api):typeof this.loader<"u"?this.loader:(window[t.CALLBACK_NAME]=()=>{if(this.api=window.google,typeof this.resolve>"u")throw new Error("Should not happen");this.resolve(this.api)},window.gm_authFailure=()=>{if(typeof this.reject>"u")throw new Error("Should not happen");this.reject(new Error("google-maps: authentication error"))},this.loader=new Promise((o,e)=>{this.resolve=o,this.reject=e;const i=document.createElement("script");i.src=this.createUrl(),i.async=!0,i.onerror=r=>e(r),document.head.appendChild(i)}))}createUrl(){const o=[`callback=${t.CALLBACK_NAME}`];this.apiKey&&o.push(`key=${this.apiKey}`);for(let e in this.options)if(this.options.hasOwnProperty(e)){let i=this.options[e];e==="version"&&(e="v"),e==="libraries"&&(i=i.join(",")),o.push(`${e}=${i}`)}return`https://maps.googleapis.com/maps/api/js?${o.join("&")}`}}t.CALLBACK_NAME="_dk_google_maps_loader_cb";export{t as Loader};
