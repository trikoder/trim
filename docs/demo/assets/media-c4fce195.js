import{_ as M,a4 as y,a5 as b,q as p,I as n,X as U,L as C,M as I,N as v,f as F,E as u,g as S,o as s,A as z,B as k,Q as x,b as o,c as m,F as h,d as B,t as c,m as g}from"./index-f949a84d.js";import{D as V}from"./dropzone-478e6dfb.js";import{S as E}from"./simpleLightbox.min-0d02b902.js";const T={elementType:"media",components:{ElementWrapper:y},mixins:[b],props:{modelValue:{type:String,default:""},acceptedFiles:{type:String},maxFileSize:{type:Number},mapImageTo:{type:[String,Function],default:"thumbnailUrl"},mapLargeImageTo:{type:[String,Function],default:"originalUrl"},mediaControllerQuery:{type:Object},enableUpload:{type:Boolean,default:!0},uploadUrl:String,uploadParameter:{type:String,default:"binary"},uploadHeaders:Object,mediaType:{type:String,default:"image"},editAfterUpload:{type:Boolean,default:!1},prepareModelFromUpload:{type:Function,default:(e,t)=>p.Model.getFromApi({url:e.xhr.getResponseHeader("Location")})},formatUploadErrorMessage:{type:Function,default:e=>e},changeImageCaption:{type:String,default:()=>n("formElements.media.changeImageCaption")},chooseImageCaption:{type:String,default:()=>n("formElements.media.chooseImageCaption")},uploadImageCaption:{type:String,default:()=>n("formElements.media.uploadImageCaption")},separatorCaption:{type:String,default:()=>n("formElements.media.separatorCaption")}},data:()=>({mediaModel:void 0}),computed:{thumbImageUrl(){return this.mediaModel?this.getModelMapping(this.mapImageTo):void 0},largeImageUrl(){return this.mediaModel?this.getModelMapping(this.mapLargeImageTo):void 0},mediaController(){return this.relation&&this.relation.resourceName||this.name}},watch:{modelValue:"syncMediaModel"},created(){this.syncMediaModel()},mounted(){this.$watch("isInteractive",e=>{e&&this.enableUpload?this.setupUpload():this.disableUpload()},{immediate:!0})},beforeUnmount(){this.lightbox&&this.lightbox.destroy(),this.disableUpload()},methods:{syncMediaModel(){if(!this.modelValue)return this.mediaModel=void 0,Promise.resolve();if(this.mediaModel&&this.mediaModel.get("id")===this.modelValue)return Promise.resolve(this.mediaModel);if(this.resourceModel){const e=this.resourceModel.get(this.name);if(e&&e.get("id")===this.modelValue)return this.mediaModel=e,Promise.resolve(e)}return p.Model.getFromApi({type:this.relation&&this.relation.resourceName||this.name,id:this.modelValue}).then(e=>(this.mediaModel=e,e))},setupUpload(){const e=this.$refs.wrapper.$refs.inputWrapper,t=this.uploadUrl||p.Model.extend({type:this.relation&&this.relation.resourceName||this.name},{baseUrl:U("baseApiUrl","/api/")}).url()+"/upload",a=this.dropzone=new V(e,{url:t,acceptedFiles:this.acceptedFiles,maxFilesize:this.maxFileSize,params:this.mediaType&&{mediaType:this.mediaType},maxFiles:1,paramName:this.uploadParameter,headers:C(I({},v.defaults.headers.common,["Authorization"]),this.uploadHeaders)});a.on("success",(r,d)=>{this.prepareModelFromUpload(r,d).then(i=>this.onModelUpload(i)),a.removeFile(r)}).on("error",(r,d)=>{F({message:this.formatUploadErrorMessage(d),acceptText:n("prompt.continueText"),acceptOnly:!0,parent:this})})},disableUpload(){this.dropzone&&(this.dropzone.disable(),this.dropzone.destroy(),delete this.dropzone)},openFileDialog(){this.enableUpload&&this.dropzone&&this.dropzone.hiddenFileInput.click()},onModelUpload(e){if(this.editAfterUpload){const t=u.open({controller:this.mediaController,controllerMethod:"edit",controllerMethodParams:[{id:e.get("id")}],afterControllerMount:a=>this.assignOnSave(a,t),parent:this})}else this.mediaModel=e,this.$emit("update:modelValue",e.get("id"))},assignOnSave(e,t){e.$emitter.once("resourceSaved",({resourceModel:a})=>{this.mediaModel=a,this.$emit("update:modelValue",a.get("id")),t.popup&&t.popup.close()})},zoomImage(){this.lightbox&&this.lightbox.destroy(),this.lightbox=E.open({items:[this.largeImageUrl||this.thumbImageUrl],beforeUnmount:()=>{delete this.lightbox}})},openEdit(){u.open({controller:this.mediaController,controllerMethod:"edit",controllerMethodParams:[{id:this.mediaModel.get("id")}],parent:this})},selectMedia(){const e=u.select(this.mediaController,t=>{this.mediaModel=t,this.$emit("update:modelValue",t.get("id"))},{controllerMethodParams:[{},this.mediaControllerQuery||{}],afterControllerMount:t=>this.assignOnSave(t,e),parent:this})},unsetValue(){return this.$emit("update:modelValue",""),this},getModelMapping(e){return typeof e=="function"?e(this.mediaModel):this.mediaModel.get(e)}}},P={class:"mediaContainer"},_=["src"],w={class:"textControls"},N={class:"separator"};function A(e,t,a,r,d,i){const f=S("element-wrapper");return s(),z(f,x({ref:"wrapper"},e.elementWrapperProps),{default:k(()=>[o("div",P,[e.mediaModel?(s(),m(h,{key:0},[o("img",{src:i.thumbImageUrl},null,8,_),o("button",{type:"button",onClick:t[0]||(t[0]=(...l)=>i.zoomImage&&i.zoomImage(...l)),class:"zoomInBtn nBtn icr iconMaximize"})],64)):(s(),m("button",{key:1,type:"button",class:B(["nBtn placeholderImage icr iconPlus",{interactive:a.enableUpload}]),onClick:t[1]||(t[1]=l=>e.isInteractive&&i.openFileDialog())},null,2))]),o("div",w,[o("span",{class:"openBtn",onClick:t[2]||(t[2]=l=>e.isInteractive&&i.selectMedia())},c(e.mediaModel?a.changeImageCaption:a.chooseImageCaption),1),a.enableUpload?(s(),m(h,{key:0},[o("span",N,c(a.separatorCaption),1),o("span",{onClick:t[3]||(t[3]=l=>e.isInteractive&&i.openFileDialog()),class:"fileUploadHandle"},c(a.uploadImageCaption),1)],64)):g("",!0)]),e.mediaModel&&e.isInteractive?(s(),m(h,{key:0},[o("button",{type:"button",onClick:t[4]||(t[4]=(...l)=>i.openEdit&&i.openEdit(...l)),class:"editBtn nBtn icr iconEdit2"}),o("button",{type:"button",onClick:t[5]||(t[5]=(...l)=>i.unsetValue&&i.unsetValue(...l)),class:"removeBtn nBtn icr iconTrash"})],64)):g("",!0)]),_:1},16)}const H=M(T,[["render",A],["__file","media.vue"]]);export{H as default};
